# frozen_string_literal: true

require_relative "menubot/version"
require "i18n"
require "pdf-reader"
require "openai"
require "dotenv/load"

# Add this configuration for French locale
I18n.available_locales = [:fr]
I18n.default_locale = :fr
I18n.backend.store_translations :fr, {
  date: {
    formats: {
      long: "%A %-d %B %Y"
    },
    month_names: [nil, "janvier", "f√©vrier", "mars", "avril", "mai", "juin", "juillet", "ao√ªt", "septembre", "octobre", "novembre", "d√©cembre"],
    day_names: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"]
  }
}

module Menubot
  class Error < StandardError; end

  def self.extract_menu_of_the_day_from_pdf(pdf_path, date)
    reader = PDF::Reader.new(pdf_path)
    pdf_content = reader.pages.map(&:text).join("\n")

    prompt = <<~PROMPT
      Le texte ci-dessous provient d'un PDF qui inclut les menus pour chaque jour de la semaine. Je souhaite extraire le menu pour une date pr√©cise. La date d‚Äôaujourd‚Äôhui est "#{date}", et j‚Äôai besoin du d√©tail pour le petit-d√©jeuner, le d√©jeuner et les collations list√©es pour cette date. Merci d‚Äôillustrer chaque en-t√™te de section avec un emoji correspondant :
      - ü•ê pour le **petit-d√©jeuner**
      - üçΩÔ∏è pour le **d√©jeuner**
      - üçé pour les **collations**

      Merci de s√©parer chaque section (petit-d√©jeuner, d√©jeuner, collations) et de fournir uniquement les √©l√©ments pertinents pour le #{date}. Voici le contenu du PDF :

      #{pdf_content}
    PROMPT

    response = client.chat(
      parameters: {
        model: "gpt-4o",
        messages: [
          { role: "system", content: "Tu es un assistant qui extrait le menu du jour √† partir d'un PDF" },
          { role: "user", content: prompt },
        ],
        temperature: 0.3
      }
    )

    response.dig("choices", 0, "message", "content")
  end
end

def client
  OpenAI::Client.new(access_token: ENV.fetch("OPENAI_API_KEY"))
end

def todays_date
  I18n.l(Date.today, format: :long, locale: :fr)
end

def tomorrows_date
  I18n.l(Date.today + 1, format: :long, locale: :fr)
end

puts Menubot.extract_menu_of_the_day_from_pdf("spec/fixtures/menus.pdf", tomorrows_date)